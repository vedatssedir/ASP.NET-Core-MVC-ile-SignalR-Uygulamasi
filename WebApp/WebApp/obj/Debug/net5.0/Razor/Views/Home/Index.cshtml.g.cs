#pragma checksum "D:\SignalR\WebApp\WebApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8c4648e7b8c213b5e30f2bbe738dac7395b51e10"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SignalR\WebApp\WebApp\Views\_ViewImports.cshtml"
using WebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SignalR\WebApp\WebApp\Views\_ViewImports.cshtml"
using WebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8c4648e7b8c213b5e30f2bbe738dac7395b51e10", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc48f17eb9bac3476d8060730298bf398eb2fa5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/microsoft/signalr/dist/browser/signalr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\SignalR\WebApp\WebApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
<div class=""row"">
    <div class=""col-md-8 offset-2"">
        <input type=""text"" class=""form-control"" id=""txtName"" />
        <hr />
        <button class=""btn btn-primary"" id=""isimkaydet"">İsim Kaydet</button>
        <button class=""btn btn-warning"" id=""btnNameTeam"">Takım Kaydet</button>
        
        

        <div class=""alert alert-info"" role=""alert"">
            <div class=""float-left"">
                Bağlantı Durumu:<strong id=""conStatus""></strong>
                ,Client Sayısı:<strong id=""clientCount""></strong>
            </div>
            <div class=""float-right"">
                <div id=""loading"" class=""spinner-border"" role=""status"" style=""display: none;"">
                    <span class=""sr-only"">Loading</span>
                </div>
            </div>
        </div>
        <div class=");
            WriteLiteral(@"""col-md-8 offset-2"">
            <div class=""col-md-8 offset-md-2"">
                <div class=""form-check form-check-inline"">
                    <input class=""form-check-input"" type=""radio"" name=""temGroup"" value=""Team A""/>
                    <label class=""form-check-label"">A Takımı</label>

                </div>
                <div class=""form-check form-check-inline"">
                    <input class=""form-check-input"" type=""radio"" name=""temGroup"" value=""Team B""/>
                    <label class=""form-check-label"">B Takımı</label>

                </div>
            </div>
          
        </div>
    </div>
</div>
  <div class=""col-md-12"">
<div class=""row"">
  
        <div class=""col-md-6"">
            ATEam
            <ul class=""list-group"" id=""AnamesList""></ul>
        </div>
        BTEam
        <div class=""col-md-6"">
            <ul class=""list-group"" id=""BnamesList""></ul>
        </div>
    </div>
</div>



");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8c4648e7b8c213b5e30f2bbe738dac7395b51e105759", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">

        $(function() {
            var connection = new signalR.HubConnectionBuilder()
                .withAutomaticReconnect([1000, 1000, 3000, 1000])
                .withUrl(""https://localhost:44393/MyHub"").build();
            statusShow();
            start();

            function statusShow() {
                $(""#conStatus"").text(connection.connectionState);

            }
            function start() {
                connection.start().then(() => {
                    statusShow();
                    connection.invoke(""GetNames"");
                }).catch((err) => {
                    console.log(err);
                    setTimeout(() => {
                            start();
                        },
                        2000);
                });
            }
            connection.on(""ReceiveNames"",
                (names) => {
                    $(""#namesList"").empty();
                    names.forEach((item, index) =>");
                WriteLiteral(@" {
                        $(""#namesList"").append(`<li class=""list-group-item"">${item}</li>`);
                    });
                });
            connection.onreconnecting(err => {
                $(""#loading"").attr('style', 'display:block');
                statusShow();
                console.log(""hata:"" + err);
            });
            connection.onreconnected(connectionId => {
                $(""#loading"").attr('style', 'display:none');
                statusShow();
                console.log(""connectionId:"" + connectionId);
            });
            connection.onclose(() => {
                $(""#loading"").attr('style', 'display:none');
                statusShow();
                start();
            });
            connection.on(""ReceiveClientCount"",
                (clientCount) => {
                    $(""#clientCount"").text(clientCount);
                });
            connection.on(""Notify"",
                (counttext) => {
                    alert(counttext);");
                WriteLiteral(@"
                });
            connection.on(""Error"",
                (errortext) => {
                    alert(errortext);
                });

            $(""#isimkaydet"").click(() => {
                connection.invoke(""SendName"", $(""#txtName"").val()).catch((err) => console.log(err));
            });
            connection.on(""ReceiveMessage"",
                (name, deger) => {
                    debugger;
                    $(""#namesList"").append(`<li>${name}</li>`);
                    $(""#degerler"").text(deger);
                });


            //Groups
            $(""#btnNameTeam"").click(() => {
                debugger;
                let name = $(""#txtName"").val();
                let teamName = $(""input[type=radio]:checked"").val();
                connection.invoke(""SendNameByGroup"", name, teamName).catch((err) => { console.log(err); });
            });

            connection.on(""ReceiveMessageByGroup"",
                (name, teamId) => {
                    debugg");
                WriteLiteral(@"er;
                   
                    if (teamId === 1) {
                        listname = 'AnamesList';
                        $(""#AnamesList"").append(`<li class=""list-group-item"">${name}</li>`);
                    } else {
                        $(""#BnamesList"").append(`<li class=""list-group-item"">${name}</li>`);
                    }
                 
                });


            $(""input[type=radio]"").change(() => {
                let value = $(`input[type=radio]:checked`).val();
                if (value === ""Team A"") {
                    connection.invoke(""AddGroup"", value);
                    connection.invoke(""RemoveToGroup"", ""Team B"");

                }
                else {
                    connection.invoke(""AddGroup"", value);
                    connection.invoke(""RemoveToGroup"", ""Team A"");
                }
            });


        });


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
